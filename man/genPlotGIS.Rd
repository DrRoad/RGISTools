% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genPlotGIS.R
\name{genPlotGIS}
\alias{genPlotGIS}
\title{Plot satellite images with a GIS format}
\usage{
genPlotGIS(r, region, breaks, labels, nbreaks = 40, nlabels = 10,
  compass.rm = FALSE, scale.bar.rm = FALSE, ...)
}
\arguments{
\item{r}{a \code{Raster*} class object with the image or image stack to be plotted.}

\item{region}{a \code{Spatial*}, projected \code{raster*}, or \code{sf*} class object 
defining the area of interest.}

\item{...}{argument for nested functions:
\itemize{
  \item \code{compOpt} list to fit the size and the location of the GIS 
  components as the arrow and the scales.
  \item \code{proj} a \code{CRS} class object defining the coordinate 
  reference system of the plot.
  \item \code{...} any argument accepted by the \code{spplot} function.
}}

\item{cex}{A numeric multiplier to control character sizes for axis labels.}
}
\value{
\code{tmap} class containing the plot.
}
\description{
This function displays satellite images with the usual format in geographic
information systems (GIS), i.e., adding a scale, north arrow, and the border
of the region of interest (optional).
}
\details{
This is a wrapper function of \code{spplot} and hence displays any 
\code{Raster*} object and accepts all of its parameters. The function adds a
scale, a north arrow and a polygon in the area of interest. If necessary, the
function automatically reprojects the polygon to match the projection of the
\code{raster}. The projection of the map can be changed by modifying the 
\code{proj} argument. The position in the graph of the arrow and scale bar
is measured in relative distances (0-1) to the lower left corner of the
graph. Their positions can be modified with the argument \code{compOpt}.
}
\examples{
genPlotGIS(ex.ndvi.navarre,
           ex.navarre)

genPlotGIS(ex.ndvi.navarre,
           ex.navarre,
           tm.compass.size=1,
           tm.compass.type="rose",
           tm.scale.bar.text.size=0.4,
           tm.polygon.region.lwd=6,
           tm.polygon.region.border.col="#000000",
           tm.raster.r.palette=rev(terrain.colors(40)),
           tm.raster.r.title="NDVI")

tmap_mode("view")
genPlotGIS(ex.ndvi.navarre[[1]],
           ex.navarre,
           tm.raster.r.palette=rev(terrain.colors(40)))

tmap_mode(mode = c("plot"))
genPlotGIS(ex.ndvi.navarre,
           ex.navarre,
           tm.raster.r.palette=rev(terrain.colors(40)))
}
