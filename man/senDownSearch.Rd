% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/senDownSearch.R
\name{senDownSearch}
\alias{senDownSearch}
\title{Downloads Sentinel images from search function}
\usage{
senDownSearch(searchres, username = NULL, password = NULL,
  error.log = "Sentinel_error.log", nattempts = NULL, unzip = FALSE,
  overwrite = FALSE, ...)
}
\arguments{
\item{searchres}{output from \code{\link{senSearch}} function.}

\item{username}{login credentials to access the ESA’s SciHub web service.}

\item{password}{login credentials to access the ESA’s SciHub web service.}

\item{error.log}{the name of the error log.}

\item{nattempts}{the number of attempts that the function has to carry out to download an image in case the file becomes corrupted.}

\item{unzip}{logical argument. If \code{TRUE} unzips the images}

\item{overwrite}{logical argument. If \code{TRUE} overwrites the existing images with the same name.}

\item{...}{argument to allow function nestering.
\itemize{
  \item all input arguments in \code{\link{senSearch}}.
  \item \code{AppRoot} the directory to save the resulting time series.
}}
}
\description{
\code{senDownSearch} downloads the list of urls generated by the function senSearch using the ESA’s SciHub API.
}
\details{
\code{\link{senDownSearch}} downloads Sentinel images using the search results provided by \code{\link{senSearch}}.
 Images are downloaded into the \code{AppRoot} directory. In case the download is interrupted,
 the image file could be corrupted. The function detects the corrupted files to restart the process.
 To prevent the computer from crashing, the nattempts  flag limits the number of attempts to download the image.
 The default number of attempts is set to 3.
\code{\link{senDownload}} requires the credentials to access the ESA’s SciHub data service.
\href{https://scihub.copernicus.eu/dhus/#/self-registration}{Get your credentials}.
}
\examples{
\dontrun{
# Download S2MSI1C products sensed by Sentinel - 2 satellite in July-August 2018
data(ex.navarre)
searchres <- senSearch(startDate = as.Date("2018-07-29","\%Y-\%m-\%d"),
                       endDate = as.Date("2018-08-06","\%Y-\%m-\%d"),
                       platform = "Sentinel-2",
                       extent = ex.navarre,
                       product = "S2MSI1C",
                       username = "username",
                      password = "password")

# filtering the path R094 where Navarre is located
names(searchres)
searchres.R094 <- searchres[grepl("R094",names(searchres))]
names(searchres.R094)

# Sentinel download function
senDownSearch(searchres = searchres.R094,
              username = "username",
              password = "password",
              AppRoot = "Path_for_downloading_folder",
              unzip = TRUE)
files<-list.files("./Path_for_downloading_folder",
                  pattern = "\\\\TCI.jp2$",
                  full.names = T,
                  recursive = T)
rgb<-stack(files[1])
plotRGB(rgb)
}
}
