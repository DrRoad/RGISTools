% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/senDownSearch.R
\name{senDownSearch}
\alias{senDownSearch}
\title{Download Sentinel images from search function}
\usage{
senDownSearch(searchres, username = NULL, password = NULL,
  error.log = "Sentinel_error.log", nattempts = 5, unzip = FALSE,
  overwrite = FALSE, ...)
}
\arguments{
\item{searchres}{output from \code{\link{senSearch}} function.}

\item{username}{login credentials to access the ESA’s SciHub web service.}

\item{password}{login credentials to access the ESA’s SciHub web service.}

\item{error.log}{the name of the error log.}

\item{nattempts}{the number of attempts that the function has to carry out to download an image in case of corrupted files.}

\item{unzip}{logical argument. If \code{TRUE}, unzips the images.}

\item{overwrite}{logical argument. If \code{TRUE}, overwrites the existing images with the same name.}

\item{...}{argument for function nestering.
\itemize{
  \item \code{AppRoot} the directory to save the output time series.
}}
}
\description{
\code{senDownSearch} downloads the list of urls generated by the function senSearch using the ESA’s SciHub API.
}
\details{
\code{senDownSearch} downloads Sentinel images using the search results provided by \code{\link{senSearch}}.
 Images are downloaded into the \code{AppRoot} directory. In case the download is interrupted,
 the image file could be corrupted. The function detects the corrupted files to restart the process.
 To prevent the computer from crashing, the nattempts  flag limits the number of attempts to download the image.
 The default number of attempts is set to 3.
\code{senDownSearch} requires the credentials to access the ESA’s SciHub data service.
\href{https://scihub.copernicus.eu/dhus/#/self-registration}{Get your credentials}.
}
\examples{
\dontrun{
# load a spatial polygon object of Navarre
data(ex.navarre)
# Download S2MSI1C products sensed by Sentinel - 2 satellite in July-August 2018
searchres <- senSearch(startDate = as.Date("2018-07-29","\%Y-\%m-\%d"),
                       endDate = as.Date("2018-08-06","\%Y-\%m-\%d"),
                       platform = "Sentinel-2",
                       extent = ex.navarre,
                       product = "S2MSI1C",
                       username = "username",
                       password = "password")

# filtering the path R094 where Navarre is located
names(searchres)
searchres.R094 <- searchres[grepl("R094", names(searchres))]
names(searchres.R094)
# list the dates in searchres
senGetDates(names(searchres.R094),format="\%Y\%j")
src = file.path("Path_for_downloading_folder","Sentinel-2")
# Sentinel download function
senDownSearch(searchres = searchres.R094,
              username = "username",
              password = "password",
              AppRoot = src,
              unzip = TRUE)
src.unzip <- file.path(src,"unzip")
files<-list.files(src.unzip,
                  pattern = "\\\\TCI.jp2$",
                  full.names = TRUE,
                  recursive = TRUE)
rgb<-stack(files[1])
plotRGB(rgb)
}
}
