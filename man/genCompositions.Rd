% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genCompositions.R
\name{genCompositions}
\alias{genCompositions}
\title{Creates image compositions from a time series of satellite images}
\usage{
genCompositions(rstack, n.days, fun, by.periods = F, ...)
}
\arguments{
\item{rstack}{a \code{RasterStack} where every layer is named after the date it was captured in \%Y\%j format}

\item{n.days}{number of days considered in the temporal window}

\item{fun}{the function used to create the composite, such as \code{max}, \code{min}, \code{mean}, ...}

\item{by.periods}{flag to specify the number of images to aggregate instead a temporal window}

\item{...}{argument to allow function nestering
\itemize{
  \item \code{AppRoot} the path where the images will be saved in tif image format
}}
}
\description{
\code{genCompositions} combines satellite images over a temporal window to create composites
}
\details{
This function supports temporal aggregations with different function specifying \code{fun} argument.
THe number of images aggregated is defined using \code{n.days} argument.

Composites reduce the number of images, but improve the quality of the images,
since clouds and potential outliers are removed. One of the most used
techniques is the Maximum Value Composition (\code{MVC}). The \code{MVC} applied over
images of remote sensing indices. Clouds and outliers usually appear as
very low values the index. Hence, the \code{MVC} builds a composite using the
maximum value a pixel over a period of time. Write \code{fun = max} to use the
\code{MVC} technique. Other functions are also supported
}
\examples{
# load a time series of NDVI images over Navarre
data("ex.ndvi.navarre")
# show the images: clouds are found
genPlotGIS(ex.ndvi.navarre)
# Composites dividing the series in two periods and using MVC
composite.NDVI.1 <- genCompositions(ex.ndvi.navarre,
                                    n.days = 2,
                                    by.periods = TRUE,
                                    fun = max)
# Check that the clouds were removed
genPlotGIS(composite.NDVI.1)
# Equivalent: Use 3 images for every composite
composite.NDVI.2 <- genCompositions(ex.ndvi.navarre,
                                    n.days = 3,
                                    fun = max)
genPlotGIS(composite.NDVI.2)
}
