% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genCompositions.R
\name{genCompositions}
\alias{genCompositions}
\title{Creates image compositions from a time series of satellite images}
\usage{
genCompositions(rstack, n, fun, by.days = FALSE, ...)
}
\arguments{
\item{rstack}{a \code{RasterStack} where every layer is named after the 
date it was captured in julian format as "\code{YYYYJJJ}".}

\item{n}{number of images combined in the aggregation.}

\item{fun}{the function used to create the composite, such as \code{max}, \code{min}, \code{mean}, ...}

\item{by.days}{logical argument. If \code{FALSE}, \code{n} indicates the number of images.
If \code{TRUE}, \code{n} indicates the number of days.}

\item{...}{argument to allow function nestering.
\itemize{
  \item \code{AppRoot} the path where the images will be saved in tif image format.
}}
}
\description{
\code{genCompositions} combines satellite images over a temporal window to create composite images.
}
\details{
This function supports temporal aggregations by specifying \code{fun} argument.
THe number of images aggregated is defined using \code{n.days} argument.

\code{genCompositions} reduce the number of images, improving their quality,
since clouds and potential outliers are removed. Clouds and outliers usually appear with
very low values the index. For example, the Maximun value compostion (\code{MVC}) builds composites using the
maximum pixel value over a period of time. Write \code{fun = max} to use the
\code{MVC} technique. Other functions are also supported.
}
\examples{
# load a time series of NDVI images over Navarre
data("ex.ndvi.navarre")
# show the images: clouds are found
genPlotGIS(ex.ndvi.navarre)
# Equivalent: Use 3 images for every composite
composite.NDVI.1 <- genCompositions(ex.ndvi.navarre,
                                    n = 3,
                                    fun = max)
genPlotGIS(composite.NDVI.1)
# Composites dividing the series in two periods and using MVC
composite.NDVI.2 <- genCompositions(ex.ndvi.navarre,
                                    n = 2,
                                    by.days = TRUE,
                                    fun = max)
# Check that the clouds were removed
genPlotGIS(composite.NDVI.2)
}
