% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/senFolderToVar.R
\name{senFolderToVar}
\alias{senFolderToVar}
\title{Computes derived variables from Sentinel-2 multispectral bands}
\usage{
senFolderToVar(src, fun, getStack = FALSE, overwrite = FALSE,
  verbose = FALSE, resbands = c("10m", "20m", "60m"), ...)
}
\arguments{
\item{src}{path to the folder with the Sentinel multispectral images.}

\item{fun}{is a function defined by the package for computing indexes.
All functions in the package starting with three characters.
'var' are acceptable functions. Custom functions can be also implemented.}

\item{getStack}{logical argument. If \code{TRUE}, returns the time-series as a raster or otherwise as Hard Drive Devide (HDD).}

\item{overwrite}{logical argument. If \code{TRUE} overwrites the existing images with the same name.}

\item{verbose}{logical argument. If \code{TRUE} the function prints running stages and warnings.}

\item{resbands}{using Sentinel \code{S2MSI2A} products specifies the resolution of the output images. By default all 
the resolution (10m, 20m and 60m) are calculated.}

\item{...}{argument to allow function nestering:
\itemize{
  \item \code{AppRoot} the directory of the resulting time series.
}}
}
\description{
\code{senFolderToVar} calculates an index using the bands from Sentinel-2 multispectral
images. The images are specified by a path to the storing folder
(resulting from the \code{\link{senMosaic}} function). The function returns a
\code{rasterStack} with the time-series of the index.
}
\details{
The function requires the definition of src and fun arguments. The argument \code{src}
 contains the path to the folder with the multispectral
 images. It can be easily defined as the path resulting from \code{\link{senMosaic}}.
 The fun argument is a function with the calculation of the index based
 on spectral bands. There are some pre-programmed indexes in \code{RGISTools}.
 Functions with the pre-programmed indices start with var (\code{\link{varNDVI}}, \code{\link{varEVI}}).
 The user can define its own functions.
}
\examples{
\dontrun{
# load a spatial polygon object of navarre for the example
data(ex.navarre)
# assign the folder where the example will be run
src <- "Path_for_downloading_folder"
# download Sentinel images
senDownload(startDate = as.Date("2018210","\%Y\%j"),
            endDate = as.Date("2018218","\%Y\%j"),
            platform = "Sentinel-2",
            extent = ex.navarre,
            product = "S2MSI1C",
            pathrow = c("R094"),
            username = "username",
            password = "password",
            AppRoot = src)
# assign the folder with the Sentinel images unzipped
src.unzip <- file.path(src, "unzip")
# mosaic the Sentinel images
senMosaic(src.unzip,
          AppRoot = src,
          gutils = TRUE,
          out.name = "Navarre")
# assign src as the path to mosaicked folder
src2 <- file.path(src, "Navarre")
src3 <- file.path(src, "Navarre_Variables")
dir.create(src3)
# generate EVI images of Navarre
senFolderToVar(src2,
               fun = varEVI,
               AppRoot = src3)
               
flist <- list.files(file.path(src3,"EVI"),
                    pattern = "\\\\.tif$",
                    full.names = TRUE,
                    recursive = TRUE)

files.raster <- stack(flist)
spplot(files)
}
}
