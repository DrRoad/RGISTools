% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modExtractHDF.R
\name{modExtractHDF}
\alias{modExtractHDF}
\title{Convert an HDF file into a set of GTiff files}
\usage{
modExtractHDF(filesHDF, overwrite = FALSE, shp = NULL,
  verbose = FALSE, bFilter = NULL, rm.band = NULL, ...)
}
\arguments{
\item{filesHDF}{the full path where the HDF files are stored.}

\item{overwrite}{logical argument. If \code{TRUE}, overwrites the existing images with the same name.}

\item{shp}{the shape file of the area of interest.}

\item{verbose}{logical argument. If \code{TRUE}, the function prints running stages and warnings.}

\item{bFilter}{a vector containing the names of the bands to extract.}

\item{rm.band}{a vector containing the names of the bands to not extract.}

\item{...}{argument for function nestering:
\itemize{
  \item \code{AppRoot} the directory where the extracted images should be located
}}
}
\description{
\code{modExtractHDF} converts the original Modis image format (HDF) into a file
format loadable by R (GTiff). The function extracts all image layers. 
This function requires the correct installation of GDAL library.
}
\details{
HDF files cannot be directly loaded into R. The function \code{\link{modExtractHDF}}
borrows \code{gdalwarp} and \code{gdal_translate} functions from the \code{gdalUtils} package.
These functions are used to convert the '.hdf' files into '.tif' files. The '.tif'
files can be loaded in R using the \code{raster} package. Go to \code{\link{modSearch}} and \code{\link{modDownload}}
for further details about these functions. Further details about the \code{gdalUtils} functions
in \code{gdalUtils} package manual.
}
\examples{
\dontrun{
# load a spatial polygon object of Navarre
data(ex.navarre)

src<-"Path_for_downloading_folder"
img.list <- modSearch(product = "MOD11A1",
                      startDate = as.Date("01-01-2011", "\%d-\%m-\%Y"),
                      endDate = as.Date("01-01-2011", "\%d-\%m-\%Y"),
                      collection = 6,
                      extent = ex.navarre)
                      
# download first image of image list
modDownSearch(searchres = img.list, 
              username = "username", 
              password = "password",
              AppRoot = src)

src.hdf<-file.path(src,"MOD09GA","hdf")
src.tif<-file.path(src,"MOD09GA","tif")

# Extract one layer from downloaded image
hdf.files <- list.files(src.hdf, 
                        full.names = TRUE, 
                        pattern = "\\\\.hdf$")
first.hdf.file <- hdf.files[1]
modExtractHDF(filesHDF = first.hdf.file,
              AppRoot = src.tif)
}
}
