% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsCloudMask.R
\name{lsCloudMask}
\alias{lsCloudMask}
\title{Create clouds layers for Landsat images}
\usage{
lsCloudMask(src, sensitivity = 2800, overwrite = FALSE, verbose = F,
  ...)
}
\arguments{
\item{src}{the path to the folder where the Landsat multispectral captures are stored.}

\item{sensitivity}{numeric argument. Defines how sensitive is the method detecting the clouds. 0-8000 are
valid values. By default, the best value for Landsat 8 images assigned 2800. For Landsat-7 images use 600.}

\item{overwrite}{logical argument. If \code{TRUE}, overwrites the existing images with the same name.}

\item{verbose}{logical argument. If \code{TRUE}, the function prints running stages and warnings.}

\item{...}{argument for function nestering:
\itemize{
  \item \code{AppRoot} the directory where the extracted images should be located
}}
}
\description{
\code{lsCloudMask} creates layers of clouds derived from \code{BQA} band from Landsat-7 or Landsat-8 captures. 
The function run over untar images downloaded by \code{\link{lsDownSearch}} or \code{\link{lsDownload}}, and 
creates a new band named \code{CLD}.
}
\examples{
\dontrun{
# load a spatial polygon object of Navarre
data(ex.navarre)
src <- "Path_for_downloading_folder"

# Search and download the images from Landsat-8 between
# 01-01-2018 and 20-01-2018 for the region of Navarre
lsDownload(satellite = "ls8",
           username = "username",
           password = "password",
           startDate = as.Date("01-01-2018", "\%d-\%m-\%Y"),
           endDate = as.Date("20-01-2018", "\%d-\%m-\%Y"),
           pathrow = list(c(200, 31), c(200, 30)),
           untar = TRUE,
           AppRoot = src)
           
# generate the path where the GTiff images are located
src.ls8 <- file.path(src,"Landsat8")
src.untar <- file.path(src.ls8,"untar")
# calculate the cloud mask from QC layer
lsCloudMask(src=src.untar,
            overwrite=TRUE)
            
# generate the path where the mosacked images will be saved
lsMosaic(src = src.untar,
         AppRoot = src.ls8,
         out.name = "Navarre",
         extent = ex.navarre,
         bandFilter = c("CLD"),
         gutils = TRUE, # using gdalUtils
         overwrite = TRUE) # overwrite
         
# generate the path where mosaicked images are located
src.navarre <- file.path(src,"Landsat8","Navarre")
# load the B1 layer and calculate the CLD layer
tiles.path <- list.files(src.navarre,
                         full.names = TRUE,
                         recursive = TRUE,
                         pattern = "\\\\.tif$")
cloud.tiles <- tiles.path[grepl("CLD",tiles.path)]
b1.tiles <- tiles.path[grepl("B1.tif",tiles.path)]
cloud.tiles.ras <- lapply(cloud.tiles,raster)
b1.tiles.ras <- lapply(b1.tiles,raster)

# calculate cloud free b1 layers
b1.cloud.free <- b1.tiles.ras[[1]] * cloud.tiles.ras[[1]]
spplot(b1.cloud.free)
}
}
