% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsDownSearch.R
\name{lsDownSearch}
\alias{lsDownSearch}
\title{Downloads a time series of satellite images from Landsat 7-8}
\usage{
lsDownSearch(searchres, username = NULL, password = NULL,
  cookies.file = "lscookies.txt", verbose = FALSE, raw.rm = FALSE,
  untar = FALSE, overwrite = FALSE, ...)
}
\arguments{
\item{searchres}{the results from \code{ls7Search} or \code{ls8Search}.}

\item{username}{login credentials to access the USGS EROS web service.}

\item{password}{login credentials to access the USGS EROS web service.}

\item{cookies.file}{File path for saving the cookies that are used in the download process.}

\item{verbose}{logical argument. If \code{TRUE} the function prints running stages and warnings.}

\item{raw.rm}{logical argument. If \code{TRUE} removes the raw images.}

\item{untar}{logical argument. If \code{TRUE} untars downloaded images.}

\item{overwrite}{logical argument. If \code{TRUE} overwrites the existing images with the same name.}

\item{...}{argument for function nestering accepts:
\itemize{
  \item \code{AppRoot} the directory to save the downloaded images.
}}
}
\description{
\code{\link{lsDownSearch}} downloads the list of images provided by \code{\link{ls7Search}} and \code{\link{ls8Search}} functions.
The images are saved as ‘.tiff’ files in the \code{AppRoot} directory.
}
\details{
This function is used for download Landsat images. Uses the data frame result from  any landsat
search function (\code{\link{ls7Search}} or \code{\link{ls8Search}}) and download all images in data frame.
Image download requires USGS login account. \href{https://ers.cr.usgs.gov/register/}{Get your credentials}.

The image files from the USGS EROS web service are compressed as ‘.tar.gz’ files. lsDownSearch decompresses the
images and obtains the corresponding ‘.tif’ files. The ‘.tif’ files are saved in the
\code{AppRoot} directory. When \code{untarDir} is defined the function untars the images in this folder.
This replicates the images in compresses version as 'tar.gz' and uncompresses version. To save space in the disk
\code{raw.rm = T} can be defined, and \code{\link{lsDownSearch}} will remove the ‘tar.gz’ files.
If \code{raw.rm = F}, the original files remain, which might be useful to have access to the original files
in the future and avoid further downloads. By default, \code{\link{lsDownSearch}} saves the images in (...), in the \code{AppRoot}
directory. To change this setting, provide \code{AppRoot = "the full path as an argument"}.
}
\examples{
\dontrun{
# Search and download the images from Landsat-8 comprised between
# 2011 and 2013 for the region of Navarre
data(ex.navarre)
search.res <- ls8Search(startDate = as.Date("01-01-2011", "\%d-\%m-\%Y"),
                        endDate = as.Date("31-12-2013", "\%d-\%m-\%Y"),
                        extent = ex.navarre,
                        browseAvaliable = "Y")

#download 1 image
lsDownSearch(search.res[1,], 
             username = "user", 
             password = "pass", 
             untar = TRUE, 
             raw.rm = TRUE)
# download 10 images
lsDownSearch(search.res[1:10,], 
             username = "user", 
             password = "pass", 
             untar = TRUE, 
             raw.rm = TRUE)
# download all the images
lsDownSearch(search.res, 
             username = "user", 
             password = "pass", 
             untar = TRUE, 
             raw.rm = TRUE)

# Search and download the images from Landsat-7 comprised between
# 2011 and 2013 for the region of Navarre
data(ex.navarre)
search.res <- ls7Search(startDate = as.Date("01-01-2011", "\%d-\%m-\%Y"),
                        endDate = as.Date("31-12-2013", "\%d-\%m-\%Y"),
                        extent = ex.navarre,
                        browseAvaliable = "Y")
#download 1 image
lsDownSearch(search.res[1,], 
             username = "user", 
             password = "pass", 
             untar = TRUE, 
             raw.rm = TRUE)
# download 10 images
lsDownSearch(search.res[1:10,], 
             username = "user", 
             password = "pass", 
             untar = TRUE, 
             raw.rm = TRUE)
# download all the images
lsDownSearch(search.res, 
             username = "user", 
             password = "pass", 
             untar = TRUE, 
             raw.rm = TRUE)

# removes metadata data frame to free memory
lsRemoveMetadata()

files <- list.files("./", 
                    pattern = "\\\\.TIF$", 
                    full.names = TRUE, 
                    recursive = TRUE)[6,5,4]
files.stack <- stack(files)
qrange <- c(0.001, 0.999)
imagen <- varRGB(files.stack.raster[[1]], 
                 files.stack.raster[[2]],
                 files.stack.raster[[3]],
                 qrange)
plotRGB(imagen)
}
}
