% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modFolderToVar.R
\name{modFolderToVar}
\alias{modFolderToVar}
\title{Compute derived variables from Modis multispectral bands}
\usage{
modFolderToVar(src, fun, getStack = FALSE, overwrite = FALSE,
  verbose = FALSE, ...)
}
\arguments{
\item{src}{path to the input folder with the Modis multispectral images.}

\item{fun}{is a function defined for computing indexes.
All the functions starting with the "var" prefix are available 
functions. Customized functions can also be implemented.}

\item{getStack}{logical argument. If \code{TRUE}, returns the time series as a \code{RasterStack}, otherwise the result 
is saved in the Hard Drive Device (HDD).}

\item{overwrite}{logical argument. If \code{TRUE}, it overwrites the existing images with the same name.}

\item{verbose}{logical argument. If \code{TRUE}, the function prints running stages and warnings.}

\item{...}{argument for function nestering:
\itemize{
  \item \code{AppRoot} directory of the output time series.
}}
}
\description{
\code{\link{modFolderToVar}} calculates an index using the bands from Modis multispectral images.
The images are specified by a path to the storing folder (resulting from the \code{\link{modMosaic}} function).
The function returns a \code{RasterStack} with the index time series.
}
\details{
The function requires the definition of \code{src} and \code{fun} arguments. The argument \code{src}
specifies the path to the output folder with the multispectral images, where a new folder with the 
name of the product is created.
This function works with the path to the folder containing the GTiff layers derived from any \code{MOD09} product, or 
the path to the folder with the result of  \code{\link{modMosaic}}.
The \code{fun} argument is a function with
the calculation of an index based on the spectral bands. There are some pre-programmed
indixes in \code{RGISTools}. Functions with the pre-programmed indexes start with var prefix
(\code{\link{varNDVI}}, \code{\link{varEVI}}). The user can define its own functions.
}
\examples{
\dontrun{
# load a spatial polygon object of Navarre
data(ex.navarre)
# assign the main output directory
src <- "Path_for_downloading_folder"
# download Modis images
modDownload(product = "MOD09GA",
            startDate = as.Date("01-01-2018", "\%d-\%m-\%Y"),
            endDate = as.Date("03-01-2018", "\%d-\%m-\%Y"),
            username = "username",
            password = "password",
            AppRoot = src, # output folder for tif images
            extract.tif = TRUE, 
            collection = 6,
            extent = ex.navarre)
# assign src.mod as the outut folder for ModMosaic
src.mod <- file.path(src, "Modis", "MOD09GA") # output directory
src.tif <- file.path(src.mod, "tif") # input directory
# mosaic the Modis images
modMosaic(src.tif,
          AppRoot = src.mod,
          out.name = "Navarre")
# assign src as the path to mosaicked folder
src.navarre <- file.path(src.mod, "Navarre")
# generate NDVI images of Navarre
src.variables <- file.path(src.mod, "Variables")
dir.create(src.variables)
modFolderToVar(src = src.navarre,
               fun = varEVI,
               scfun = getRGISToolsOpt("MOD09SCL"),
               AppRoot = src.variables, verbose=T,
               overwrite = T)
# import tif mosaicked images to R environment
flist <- list.files(file.path(src.variables,"EVI"),
                    pattern = "\\\\.tif$",
                    full.names = TRUE,
                    recursive = TRUE)

files.raster <- lapply(flist,raster)
spplot(files.raster[[1]],at=seq(-1,2.5))
}
}
