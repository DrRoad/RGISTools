% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modMosaic.R
\name{modMosaic}
\alias{modMosaic}
\title{Mosaics a set of MODIS images}
\usage{
modMosaic(src, extent = NULL, out.name = "outfile", verbose = FALSE,
  gutils = FALSE, overwrite = FALSE, ...)
}
\arguments{
\item{src}{the path of the folder with the MODIS images in tif format.}

\item{extent}{spatial polygon object representing the region of interest.}

\item{out.name}{the name of the region, if is not defined "outfile" will be asigned.}

\item{verbose}{logical argument. If \code{TRUE} the function prints running stages and warnings.}

\item{gutils}{logical argument. If \code{TRUE} the function uses GDAL utilities for mosaicking.}

\item{overwrite}{logical argument. If \code{TRUE} overwrites the existing images with the same name.}

\item{...}{argument for function nestering accepts:
 \itemize{
  \item \code{pathrow} a list with the path and row numbers for the region of interest.
  \item \code{bandFilter} a vector with the name of the image bands to be mosaicked.
If it is not supplied, the function is applied to all the bands available in \code{src}.
  \item \code{dayFilter} a vector containing the days in date format to filter the days wanted.
  \item \code{AppRoot} the directory to save the mosaicked images.
}}
}
\description{
\code{\link{modMosaic}} merges the tiles of MODIS covering a region of interest returns a single image for each date.
}
\details{
The function mosaics the tiles of satellite images in the \code{src} folder.
The function uses the folder resulting from the \code{\link{modExtractHDF}} function.
The folder may contain multiple tiles as tif files, for one or several dates
and one or several bands. When only one band has to be mosaicked, the name of
the band can be provided through the argument \code{bandFilter}. The name of the band
should be defined as a character string beginning with the letter b and a two-digit
band number (e.g. ‘b01’). Similarly, when only a subset of dates has to be mosaicked,
the date(s) should be provided through the argument \code{dayFilter}. The dates must be
provided as date objects. Once the images are mosaicked, they are cropped using
the extent defined by \code{\link{extent}} (optional). The extent can be defined in any
projection format. The function \code{\link{modMosaic}} automatically reprojects the extent
to match the projection of the image. The resulting images will be placed in
the \code{AppRoot} directory. The output files are named after region of interest
provided by the argument \code{out.name}. If no name is provided,
by default the output file is named as ‘outfile’.
}
\examples{
\dontrun{
#load a spatial polygon object of navarre for the example
data(ex.navarre)
#asign the folder where the example will be run
src<-"Path_for_downloading_folder"
#download modis images
modDownload(product="MOD09GA",
            startDate=as.Date("01-01-2018","\%d-\%m-\%Y"),
            endDate=as.Date("03-01-2018","\%d-\%m-\%Y"),
            username="username",
            password="password",
            AppRoot=src,
            hdfdir="hdf",
            tiffdir="tif",
            collection=6,
            extent=ex.navarre)
#asign the folder with the sentinel images untared
src<-file.path(src,"MOD09GA")
tif.src<-file.path(src,"tif")
#mosaic the modis images
modMosaic(tif.src,
          AppRoot = src,
          out.name = "Navarre",
          gutils = T,
          overwrite = T,
          extent=ex.navarre)
}
}
