% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/senCloudMask.R
\name{senCloudMask}
\alias{senCloudMask}
\title{Creates clouds layers for sentinel-2 images}
\usage{
senCloudMask(src, img.res, sensitivity = 50, overwrite = FALSE, ...)
}
\arguments{
\item{src}{the path to the folder where the \code{S2MSI2A} product are stored.}

\item{img.res}{character vector argument. Defines the resolution used to create the cloud mask. ex c("10m", "20m", "30m").}

\item{sensitivity}{numeric argument. defines how sensitive is the method detecting the clouds. 0}

\item{overwrite}{logical argument. If \code{TRUE} overwrites the existing images with the same name.}

\item{...}{argument to allow function nestering:
\itemize{
  \item \code{AppRoot} the directory where the extracted images should be located.
}}
}
\description{
\code{senCloudMask} creates clouds layers using \code{CLDPROB} band from \code{S2MSI2A} product.
}
\examples{
\dontrun{
# Download S2MSI1C products sensed by Sentinel - 2 
# satellite between the julian dates 210 and 218, 2018
data(ex.navarre)
src <- "Path_for_downloading_folder"
senDownload(startDate = as.Date("2018210", "\%Y\%j"),
            endDate = as.Date("2018218", "\%Y\%j"),
            platform = "Sentinel-2",
            extent = ex.navarre,
            product = "S2MSI2A",
            pathrow = c("R094"),
            username = "username",
            password = "password",
            AppRoot = src)
src.sen2 <- file.path(src, "Sentinel-2")

src.unzip <- file.path(src.sen2, "unzip")
senMosaic(src.unzip,
          AppRoot = src,
          gutils = TRUE,
          out.name = "Navarre")
          
src.navarre <- file.path(src.sen2, "Navarre")
senCloudMask(src = src.navarre,
             img.res = "60m",
             overwrite = TRUE,
             sensitivity=98)
src.cloud <- file.path(src.sen2, "CloudMask")

tiles.navarre <- list.files(src.navarre,
                            full.names = TRUE,
                            recursive = TRUE,
                           pattern = "\\\\.tif$")
b2.tiles <- tiles.navarre[grepl("B02",tiles.navarre)]
b2.tiles <- b2.tiles[grepl("60m",b2.tiles)]

cloud.tiles <- list.files(src.cloud,
                          full.names = TRUE,
                          pattern = "\\\\.tif$")
cloud.tiles <- cloud.tiles[grepl("60m",cloud.tiles)]

b2.tiles.stack <- stack(b2.tiles)
cloud.tiles.stack <- stack(cloud.tiles)
b2.cloud.free <- b2.tiles.stack*cloud.tiles.stack
spplot(b2.cloud.free)
}
}
