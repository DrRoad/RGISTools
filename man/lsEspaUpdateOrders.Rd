% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsEspaUpdateOrders.R
\name{lsEspaUpdateOrders}
\alias{lsEspaUpdateOrders}
\title{Updates the status of a request made to ESPA}
\usage{
lsEspaUpdateOrders(orders, username = NULL, password = NULL,
  c.handle = NULL, verbose = FALSE)
}
\arguments{
\item{username}{login credentials to access the USGS EROS web service.}

\item{password}{login credentials to access the USGS EROS web service.}

\item{c.handle}{curl handler created with \code{curl} package containing the connection 
with password and username defined. This argument is mandatory if \code{username} and
\code{password} are not defined.}

\item{images}{a list of the requested images as returned by \code{\link{lsEspaGetOrderImages}}.}
}
\description{
\code{lsEspaUpdateOrders} checks the current status of a request made to EROS Centre Science Processing 
Architecture (ESPA) to pre-process Landsat Level-1 images
}
\details{
This function is part of a group of functions used to pre-process Landsat Level 1 images. 
The pre-processing is carried out by ESPA on demand. \code{\link{lsEspaUpadateOrders}} uses 
the ID numbers gathered by \code{\link{lsEspaGetOrderImages}} regarding previous order 
requests to check the processing status. The function has to be run repeatedly 
until the status message says, “complete”. All the status messages and their 
interpretation can be found in the ESPA API \href{https://landsat.usgs.gov/sites/default/files/documents/espa_odi_userguide.pdf}{User Guide}.
}
\examples{
# Search Landsat 7 level-1
search.res <- ls7Search(startDate = as.Date("01-01-2017", "\%d-\%m-\%Y"),
                        endDate = as.Date("15-01-2017", "\%d-\%m-\%Y"),
                        lonlat = c(-1.64323, 42.81687))
# Request to ESPA the prepocessing of level-1 images to get the surface reflectance
orders <- lsEspaOrderImages(search.res = search.res,
                            username = "username", 
                            password = "password", 
                            product = 'sr',
                            verbose = FALSE)
# Get an ID for our request
orders <- lsEspaGetOrderImages(username = "username", 
                               password = "password")
# Follow up the status of the request
lsEspaUpdateOrders(orders = orders,
                   username = "username", 
                   password = "password")
}
